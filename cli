#!/usr/bin/env python3

import os
import sys


class A(dict):
    def __init__(self):
        self.__dict__ = self


GLOBALS = A()


def check_ver():
    vi = sys.version_info

    if vi.major >= 3 and vi.minor >= 8:
        return

    for x in ('/root/python/bin:/Users/pg/18/bin:' + os.environ.get('PATH', '')).split(':'):
        for v in ('3.8', '3.9', '3.10'):
            path = x + '/python' + v

            if os.path.isfile(path):
                os.execvp(path, [path] + sys.argv)

    raise Exception('we need python 3.8')


check_ver()


def find_me():
    for f in (lambda: __file__, lambda: sys.argv[0], lambda: os.path.abspath(os.getcwd()) + '/cli'):
        p = os.path.abspath(f())

        if os.path.isfile(p):
            GLOBALS.script_path = p
            GLOBALS.script_dir = os.path.dirname(p)

            return p

    raise Exception('can not find myself')


__file__ = find_me()


def real_main(g):
    file_data = None
    #REPLACEME

    g.file_data = file_data
    
    if g.file_data:
        data = dict((x['name'], x) for x in g.file_data)['ut/stagea.py']
    else:
        with open(g.script_dir + '/util/stagea.py') as f:
            data = f.read()

    ctx = {'_globals': g}
    exec(compile(data +'\nmain(_globals)\n', '__main__', 'exec'), ctx)
    ctx.clear()


if __name__ == '__main__':
    real_main(GLOBALS)
