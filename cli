#!/Users/pg/18/bin/python3

import sys
import threading


sys.dont_write_bytecode = True


def real_trace(*args):
    pass


def trace(*args):
    globals()['real_trace'](*args)


if 'profile=pg' in ''.join(sys.argv):
    sys.settrace(trace)
    threading.settrace(trace)
    

import os
import signal
import traceback


def on_exit(*args):
    os._exit(8)

    
__file__ = os.path.abspath(__file__)
real_handler = on_exit


def sig_handler(*args):
    real_handler(*args)

    
signal.signal(signal.SIGINT, sig_handler)
signal.signal(signal.SIGPIPE, signal.SIG_IGN)


def real_main():
    file_data = None
    data = None
    #REPLACEME

    if not data:
        with open(os.path.dirname(__file__) + '/util/stagea.py') as f:
            data = f.read()

    args = {'where': __file__, 'data': file_data}
    ctx = {'args': args}
    exec(compile(data +'\nmain(args, **args)\n', '__main__', 'exec'), ctx)
    ctx.clear()

    
if __name__ == '__main__':
    abort = os.abort

    def new_abort():
        try:
            traceback.print_exc()
        finally:
            abort()

    os.abort = new_abort 
    real_main()
