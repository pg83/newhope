source set_env

exec 5>&1
exec 6>&2

exec 1> $BDIR/runtime/stdout.log
exec 2> $BDIR/runtime/stderr.log

echo "{r}running {w:cname}{}" 1>&5

run_sh() {
    echo "$BIGI" | source base64_decode > "$BDIR/runtime/run.sh"
    source echon {y}; source last_log "$BDIR/runtime/run.sh"; echo '{}';
}

run_sh 1>&5 || true

cur_progr() {
    source echon {b}
    echo ' env:'
    source set_env
    (/usr/bin/env | step) || true;
    echo '{}'
}

cur_progr 1>&5

stdout() {
    source echon {g}; source last_log "$BDIR/runtime/stdout.log"; echo '{}';
}

stderr() {
    source echon {r}; source last_log "$BDIR/runtime/stderr.log"; echo '{}';
}

cleanup() {
    source rmdel "$IDIR" "$BDIR"
}

do_check_logs() {
    source check_log "$BDIR/runtime/stdout.log" "$BDIR/runtime/stderr.log"
}

check_logs() {
    echo " checks: "
    val=$(do_check_logs | while read line; do ((echo "  $line") 1>&5); echo $$; done | uniq)

    if [ $val ]
    then
        echo '  will kill ourselves'
        kill -TERM $$
    else
        echo '  all logs OK'
    fi
}

check_logs_5() {
    (source echon {w}; check_logs; echo '{}') 1>&5
}

trap "(stdout; stderr; check_logs_5; cleanup) 1>&5" EXIT
trap "exit 5" TERM

pwd

export LC_ALL="C"
export LANG="C"
export HOME="/"
export PWD="/"

cd $BD || cd /
